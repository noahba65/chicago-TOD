"B06012_002E"),
year=2009, state=17, county=097, geometry=T, output="wide") %>%
st_transform('ESRI:102728') %>%
rename(TotalPop = B25026_001E, Whites = B02001_002E,
FemaleBachelors = B15001_050E, MaleBachelors = B15001_009E,
MedHHInc = B19013_001E, MedRent = B25058_001E,
TotalPoverty = B06012_002E) %>%
dplyr::select(-NAME, -starts_with("B")) %>%
mutate(pctWhite = ifelse(TotalPop > 0, Whites / TotalPop,0),
pctBachelors = ifelse(TotalPop > 0, ((FemaleBachelors + MaleBachelors) / TotalPop),0),
pctPoverty = ifelse(TotalPop > 0, TotalPoverty / TotalPop, 0),
year = "2009", county = "Lake") %>%
dplyr::select(-Whites, -FemaleBachelors, -MaleBachelors, -TotalPoverty)
mchenry09 <-
get_acs(geography = "tract", variables = c("B25026_001E","B02001_002E","B15001_050E",
"B15001_009E","B19013_001E","B25058_001E",
"B06012_002E"),
year=2009, state=17, county=111, geometry=T, output="wide") %>%
st_transform('ESRI:102728') %>%
rename(TotalPop = B25026_001E, Whites = B02001_002E,
FemaleBachelors = B15001_050E, MaleBachelors = B15001_009E,
MedHHInc = B19013_001E, MedRent = B25058_001E,
TotalPoverty = B06012_002E) %>%
dplyr::select(-NAME, -starts_with("B")) %>%
mutate(pctWhite = ifelse(TotalPop > 0, Whites / TotalPop,0),
pctBachelors = ifelse(TotalPop > 0, ((FemaleBachelors + MaleBachelors) / TotalPop),0),
pctPoverty = ifelse(TotalPop > 0, TotalPoverty / TotalPop, 0),
year = "2009", county = "McHenry") %>%
dplyr::select(-Whites, -FemaleBachelors, -MaleBachelors, -TotalPoverty)
will09 <-
get_acs(geography = "tract", variables = c("B25026_001E","B02001_002E","B15001_050E",
"B15001_009E","B19013_001E","B25058_001E",
"B06012_002E"),
year=2009, state=17, county=197, geometry=T, output="wide") %>%
st_transform('ESRI:102728') %>%
rename(TotalPop = B25026_001E, Whites = B02001_002E,
FemaleBachelors = B15001_050E, MaleBachelors = B15001_009E,
MedHHInc = B19013_001E, MedRent = B25058_001E,
TotalPoverty = B06012_002E) %>%
dplyr::select(-NAME, -starts_with("B")) %>%
mutate(pctWhite = ifelse(TotalPop > 0, Whites / TotalPop,0),
pctBachelors = ifelse(TotalPop > 0, ((FemaleBachelors + MaleBachelors) / TotalPop),0),
pctPoverty = ifelse(TotalPop > 0, TotalPoverty / TotalPop, 0),
year = "2009", county = "Will") %>%
dplyr::select(-Whites, -FemaleBachelors, -MaleBachelors, -TotalPoverty)
# Creating one tract data frame for the CMAP region
tracts09 <- rbind(cook09,dupage09,kane09,kendall09,lake09,mchenry09,will09)
# Pulling ACS Five year data (2015-2019) for the seven CMAP counties
cook19 <-
get_acs(geography = "tract", variables = c("B25026_001E","B02001_002E","B15001_050E",
"B15001_009E","B19013_001E","B25058_001E",
"B06012_002E"),
year=2019, state=17, county=031, geometry=T, output="wide") %>%
st_transform('ESRI:102728') %>%
rename(TotalPop = B25026_001E, Whites = B02001_002E,
FemaleBachelors = B15001_050E, MaleBachelors = B15001_009E,
MedHHInc = B19013_001E, MedRent = B25058_001E,
TotalPoverty = B06012_002E) %>%
dplyr::select(-NAME, -starts_with("B")) %>%
mutate(pctWhite = ifelse(TotalPop > 0, Whites / TotalPop,0),
pctBachelors = ifelse(TotalPop > 0, ((FemaleBachelors + MaleBachelors) / TotalPop),0),
pctPoverty = ifelse(TotalPop > 0, TotalPoverty / TotalPop, 0),
year = "2019", county = "Cook") %>%
dplyr::select(-Whites, -FemaleBachelors, -MaleBachelors, -TotalPoverty)
dupage19 <-
get_acs(geography = "tract", variables = c("B25026_001E","B02001_002E","B15001_050E",
"B15001_009E","B19013_001E","B25058_001E",
"B06012_002E"),
year=2019, state=17, county=043, geometry=T, output="wide") %>%
st_transform('ESRI:102728') %>%
rename(TotalPop = B25026_001E, Whites = B02001_002E,
FemaleBachelors = B15001_050E, MaleBachelors = B15001_009E,
MedHHInc = B19013_001E, MedRent = B25058_001E,
TotalPoverty = B06012_002E) %>%
dplyr::select(-NAME, -starts_with("B")) %>%
mutate(pctWhite = ifelse(TotalPop > 0, Whites / TotalPop,0),
pctBachelors = ifelse(TotalPop > 0, ((FemaleBachelors + MaleBachelors) / TotalPop),0),
pctPoverty = ifelse(TotalPop > 0, TotalPoverty / TotalPop, 0),
year = "2019", county = "Dupage") %>%
dplyr::select(-Whites, -FemaleBachelors, -MaleBachelors, -TotalPoverty)
kane19 <-
get_acs(geography = "tract", variables = c("B25026_001E","B02001_002E","B15001_050E",
"B15001_009E","B19013_001E","B25058_001E",
"B06012_002E"),
year=2019, state=17, county=089, geometry=T, output="wide") %>%
st_transform('ESRI:102728') %>%
rename(TotalPop = B25026_001E, Whites = B02001_002E,
FemaleBachelors = B15001_050E, MaleBachelors = B15001_009E,
MedHHInc = B19013_001E, MedRent = B25058_001E,
TotalPoverty = B06012_002E) %>%
dplyr::select(-NAME, -starts_with("B")) %>%
mutate(pctWhite = ifelse(TotalPop > 0, Whites / TotalPop,0),
pctBachelors = ifelse(TotalPop > 0, ((FemaleBachelors + MaleBachelors) / TotalPop),0),
pctPoverty = ifelse(TotalPop > 0, TotalPoverty / TotalPop, 0),
year = "2019", county = "Kane") %>%
dplyr::select(-Whites, -FemaleBachelors, -MaleBachelors, -TotalPoverty)
kendall19 <-
get_acs(geography = "tract", variables = c("B25026_001E","B02001_002E","B15001_050E",
"B15001_009E","B19013_001E","B25058_001E",
"B06012_002E"),
year=2019, state=17, county=093, geometry=T, output="wide") %>%
st_transform('ESRI:102728') %>%
rename(TotalPop = B25026_001E, Whites = B02001_002E,
FemaleBachelors = B15001_050E, MaleBachelors = B15001_009E,
MedHHInc = B19013_001E, MedRent = B25058_001E,
TotalPoverty = B06012_002E) %>%
dplyr::select(-NAME, -starts_with("B")) %>%
mutate(pctWhite = ifelse(TotalPop > 0, Whites / TotalPop,0),
pctBachelors = ifelse(TotalPop > 0, ((FemaleBachelors + MaleBachelors) / TotalPop),0),
pctPoverty = ifelse(TotalPop > 0, TotalPoverty / TotalPop, 0),
year = "2019", county = "Kendall") %>%
dplyr::select(-Whites, -FemaleBachelors, -MaleBachelors, -TotalPoverty)
lake19  <-
get_acs(geography = "tract", variables = c("B25026_001E","B02001_002E","B15001_050E",
"B15001_009E","B19013_001E","B25058_001E",
"B06012_002E"),
year=2019, state=17, county=097, geometry=T, output="wide") %>%
st_transform('ESRI:102728') %>%
rename(TotalPop = B25026_001E, Whites = B02001_002E,
FemaleBachelors = B15001_050E, MaleBachelors = B15001_009E,
MedHHInc = B19013_001E, MedRent = B25058_001E,
TotalPoverty = B06012_002E) %>%
dplyr::select(-NAME, -starts_with("B")) %>%
mutate(pctWhite = ifelse(TotalPop > 0, Whites / TotalPop,0),
pctBachelors = ifelse(TotalPop > 0, ((FemaleBachelors + MaleBachelors) / TotalPop),0),
pctPoverty = ifelse(TotalPop > 0, TotalPoverty / TotalPop, 0),
year = "2019", county = "Lake") %>%
dplyr::select(-Whites, -FemaleBachelors, -MaleBachelors, -TotalPoverty)
mchenry19 <-
get_acs(geography = "tract", variables = c("B25026_001E","B02001_002E","B15001_050E",
"B15001_009E","B19013_001E","B25058_001E",
"B06012_002E"),
year=2019, state=17, county=111, geometry=T, output="wide") %>%
st_transform('ESRI:102728') %>%
rename(TotalPop = B25026_001E, Whites = B02001_002E,
FemaleBachelors = B15001_050E, MaleBachelors = B15001_009E,
MedHHInc = B19013_001E, MedRent = B25058_001E,
TotalPoverty = B06012_002E) %>%
dplyr::select(-NAME, -starts_with("B")) %>%
mutate(pctWhite = ifelse(TotalPop > 0, Whites / TotalPop,0),
pctBachelors = ifelse(TotalPop > 0, ((FemaleBachelors + MaleBachelors) / TotalPop),0),
pctPoverty = ifelse(TotalPop > 0, TotalPoverty / TotalPop, 0),
year = "2019", county = "McHenry") %>%
dplyr::select(-Whites, -FemaleBachelors, -MaleBachelors, -TotalPoverty)
will19 <-
get_acs(geography = "tract", variables = c("B25026_001E","B02001_002E","B15001_050E",
"B15001_009E","B19013_001E","B25058_001E",
"B06012_002E", "B25026_001E"),
year=2019, state=17, county=197, geometry=T, output="wide") %>%
st_transform('ESRI:102728') %>%
rename(TotalPop = B25026_001E, Whites = B02001_002E,
FemaleBachelors = B15001_050E, MaleBachelors = B15001_009E,
MedHHInc = B19013_001E, MedRent = B25058_001E,
TotalPoverty = B06012_002E) %>%
dplyr::select(-NAME, -starts_with("B")) %>%
mutate(pctWhite = ifelse(TotalPop > 0, Whites / TotalPop,0),
pctBachelors = ifelse(TotalPop > 0, ((FemaleBachelors + MaleBachelors) / TotalPop),0),
pctPoverty = ifelse(TotalPop > 0, TotalPoverty / TotalPop, 0),
year = "2019", county = "Will") %>%
dplyr::select(-Whites, -FemaleBachelors, -MaleBachelors, -TotalPoverty, )
tracts19 <- rbind(cook19,dupage19,kane19,kendall19,lake19,mchenry19,will19)
allTracts <- rbind(tracts09,tracts19)
ggplot() +
geom_sf(data = tracts19) +
mapTheme()
metra_stops <- st_read("/Users/noahanderson/Documents/GitHub/chicago-TOD/DATA/MetraStation/MetraStations.shp") %>%
st_transform('ESRI:102728')
# Filters out stops outside of the CMAP region
metra_cmap <- st_intersection(tracts19,metra_stops)
# Creates a mile buffer around the metra stops
metra_buffer <- st_union(st_buffer(metra_cmap,5280)) %>%
st_sf()
tract_buffer <- st_centroid(tracts09)[metra_buffer,] %>%
st_drop_geometry() %>%
left_join(dplyr::select(tracts09,GEOID)) %>%
st_sf()
ggplot() +
geom_sf(data = st_union(tracts09)) +
geom_sf(data = tract_buffer) +
labs(title = "CMAP Region \n Metra Buffer") +
mapTheme()
allTracts.group <-
rbind(
st_centroid(allTracts)[tract_buffer,] %>%
st_drop_geometry() %>%
left_join(allTracts) %>%
st_sf() %>%
mutate(TOD = "TOD"),
st_centroid(allTracts)[tract_buffer, op = st_disjoint] %>%
st_drop_geometry() %>%
left_join(allTracts) %>%
st_sf() %>%
mutate(TOD = "Non-TOD")) %>%
mutate(MedRent.inf = ifelse(year == "2009", MedRent * 1.2, MedRent))
ggplot() +
geom_sf(data = st_union(tracts09)) +
geom_sf(data = allTracts.group, aes(fill = q5(MedRent.inf)),color = NA) +
geom_sf(data = metra_buffer, fill = NA, color = "red", linewidth = 1) +
scale_fill_manual(values = palette5, labels = qBr(allTracts.group,"MedRent.inf"), name = "Total Population \n (Quantile Breaks)") +
facet_wrap(~year) +
mapTheme()
allTracts.Summary <-
st_drop_geometry(allTracts.group) %>%
group_by(year, TOD) %>%
summarize(Rent = mean(MedRent.inf, na.rm = T),
Population = mean(TotalPop, na.rm = T),
Percent_White = mean(pctWhite, na.rm = T),
Percent_Bach = mean(pctBachelors, na.rm = T),
Percent_Poverty = mean(pctPoverty, na.rm = T))
kable(allTracts.Summary) %>%
kable_styling() %>%
footnote(general_title = "\n",
general = "Table 1.2")
allTracts.Summary %>%
gather(Variable, Value, -year, -TOD) %>%
ggplot(aes(year, Value, fill = TOD)) +
geom_bar(stat = "identity", position = "dodge") +
facet_wrap(~Variable, scales = "free", ncol=5) +
scale_fill_manual(values = c("#bae4bc", "#0868ac")) +
labs(title = "Indicator differences across time and space")  + theme(legend.position="bottom")
allTracts.rings <-
st_join(st_centroid(dplyr::select(allTracts, GEOID, year)),
multipleRingBuffer(st_union(septaStops), 47520, 2640)) %>%
st_drop_geometry() %>%
left_join(dplyr::select(allTracts, GEOID, MedRent, year),
by=c("GEOID"="GEOID", "year"="year")) %>%
st_sf() %>%
mutate(distance = distance / 5280) #convert to miles
library(tidyverse)
library(tidycensus) # allows access to census API
library(sf) # wrangles and processes spatial data
library(kableExtra) # Helps create tables
options(scipen=999) # Tells R not to use sci notation
options(tigris_class = "sf") # This tells tidycensus to download Census geometries in the sf format
root.dir = "https://raw.githubusercontent.com/urbanSpatial/Public-Policy-Analytics-Landing/master/DATA/"
source("https://raw.githubusercontent.com/urbanSpatial/Public-Policy-Analytics-Landing/master/functions.r") # The functions used throughout this book are read in from a source file to see the plot themes
palette5 <- c("#f0f9e8","#bae4bc","#7bccc4","#43a2ca","#0868ac")
# census_api_key("d1bfee664da7c32a69eb4f9d15662927cf801cad", install = TRUE) # Install true saves the key for future sessions
View(load_variables(2000, "sf3", cache = TRUE))
vars00 <- c("P001001", "P006002", "PCT025009")
# TotalPop = ("P001001", "P006002", "PCT025009"),
#           FemaleBachelors = PCT025050, MedHHInc = P053001, MedRent = H056001,
#           TotalPoverty = P092001
test <- get_decennial(geography = "state",state = "IL", variables = vars00, year=2000, geometry = T)
View(test)
tracts00 <-
st_read(file.path(root.dir,"/Chapter1/PHL_CT00.geojson")) %>%
st_transform('ESRI:102728') # projects the layer into feet
totalPop00 <- tracts00 %>%
filter(variable == "P001001")
View(tracts00)
# If you have the sf package loaded, R will automatically make maps with the base plot function
plot(totalPop00[,4])
A <-
ggplot() +
geom_sf(data = totalPop00, aes(fill = value))
B <-
ggplot() +
geom_sf(data = totalPop00, aes(fill = q5(value)))
C <-
ggplot() +
geom_sf(data = totalPop00, aes(fill = q5(value))) +
scale_fill_manual(values = palette5,
labels = qBr(totalPop00, "value"),
name = "Total\nPopluation\n(Quintile Breaks)")
D <-
ggplot() +
geom_sf(data = totalPop00, aes(fill = q5(value))) +
scale_fill_manual(values = palette5,
labels = qBr(totalPop00, "value"),
name = "Popluation\n(Quintile Breaks)") +
labs(title = "Total Population", subtitle = "Philadelphia; 2000") +
mapTheme()
A
B
C
D
# the code below converts long to wide and renames the variables to make more sense
tracts00 <-
dplyr::select(tracts00, -NAME) %>%
spread(variable, value) %>%
dplyr::select(-geometry) %>%
rename(TotalPop = P001001, Whites = P006002, MaleBachelors = PCT025009,
FemaleBachelors = PCT025050, MedHHInc = P053001, MedRent = H056001,
TotalPoverty = P092001)
# Creating rate variables using ifelse function
tracts00 <-
tracts00 %>%
mutate(pctWhite = ifelse(TotalPop > 0, Whites / TotalPop, 0),
pctBachelors = ifelse(TotalPop > 0, ((FemaleBachelors + MaleBachelors) / TotalPop), 0),
pctPoverty = ifelse(TotalPop > 0, TotalPoverty / TotalPop, 0),
year = "2000") %>%
dplyr::select(-Whites,-FemaleBachelors,-MaleBachelors,-TotalPoverty)
# The rbind function is used to bind the data for the two lines in Philledelphia
septaStops <-
rbind(
st_read("https://opendata.arcgis.com/datasets/8c6e2575c8ad46eb887e6bb35825e1a6_0.geojson") %>%
mutate(Line = "El") %>%
select(Station, Line),
st_read("https://opendata.arcgis.com/datasets/2e9037fd5bef406488ffe5bb67d21312_0.geojson") %>%
mutate(Line ="Broad_St") %>%
select(Station, Line)) %>%
st_transform(st_crs(tracts00))
tracts17 <-
get_acs(geography = "tract", variables = c("B25026_001E","B02001_002E","B15001_050E",
"B15001_009E","B19013_001E","B25058_001E",
"B06012_002E"),
year=2017, state=42, county=101, geometry=T, output="wide") %>%
st_transform('ESRI:102728') %>%
rename(TotalPop = B25026_001E, Whites = B02001_002E,
FemaleBachelors = B15001_050E, MaleBachelors = B15001_009E,
MedHHInc = B19013_001E, MedRent = B25058_001E,
TotalPoverty = B06012_002E) %>%
dplyr::select(-NAME, -starts_with("B")) %>%
mutate(pctWhite = ifelse(TotalPop > 0, Whites / TotalPop,0),
pctBachelors = ifelse(TotalPop > 0, ((FemaleBachelors + MaleBachelors) / TotalPop),0),
pctPoverty = ifelse(TotalPop > 0, TotalPoverty / TotalPop, 0),
year = "2017") %>%
dplyr::select(-Whites, -FemaleBachelors, -MaleBachelors, -TotalPoverty)
allTracts <- rbind(tracts00,tracts17)
ggplot() +
geom_sf(data=st_union(tracts00)) +
geom_sf(data=septaStops, aes(colour = Line), show.legend = "point", size= 2) +
scale_colour_manual(values = c("orange","blue")) +
labs(title="Septa Stops", subtitle="Philadelphia, PA") +
mapTheme()
septaBuffers <-
rbind(
st_buffer(septaStops, 2640) %>%
mutate(Legend = "Buffer") %>%
dplyr::select(Legend),
st_union(st_buffer(septaStops, 2640)) %>%
st_sf() %>%
mutate(Legend = "Unioned Buffer"))
ggplot() +
geom_sf(data=septaBuffers) +
geom_sf(data=septaStops, show.legend = "point") +
facet_wrap(~Legend) +
mapTheme()
buffer <- filter(septaBuffers, Legend=="Unioned Buffer")
clip <-
st_intersection(buffer, tracts00) %>%
dplyr::select(TotalPop) %>%
mutate(Selection_Type = "Clip")
selection <-
tracts00[buffer,] %>%
dplyr::select(TotalPop) %>%
mutate(Selection_Type = "Spatial Selection")
selectCentroids <-
st_centroid(tracts00)[buffer,] %>%
st_drop_geometry() %>%
left_join(dplyr::select(tracts00, GEOID)) %>%
st_sf() %>%
dplyr::select(TotalPop) %>%
mutate(Selection_Type = "Select by Centroids")
selection_types <- rbind(clip,selection,selectCentroids)
ggplot() +
geom_sf(data = st_union(tracts00)) +
geom_sf(data = selection_types, aes(fill = q5(TotalPop) ))  +
scale_fill_manual(values = palette5, labels = qBr(totalPop00, "value"), name = "Popluation\n(Quintile Breaks)")+
facet_wrap(~Selection_Type) + # creates multiple maps
mapTheme()
allTracts.group <-
rbind(
st_centroid(allTracts)[buffer,] %>%
st_drop_geometry() %>%
left_join(allTracts) %>%
st_sf() %>%
mutate(TOD = "TOD"),
st_centroid(allTracts)[buffer, op = st_disjoint] %>%
st_drop_geometry() %>%
left_join(allTracts) %>%
st_sf() %>%
mutate(TOD = "Non-TOD")) %>%
mutate(MedRent.inf = ifelse(year == "2000", MedRent * 1.42, MedRent))
union_buffer <- septaBuffers %>%
filter(Legend == "Unioned Buffer")
ggplot() +
geom_sf(data = st_union(tracts00)) +
geom_sf(data = allTracts.group, aes(fill = q5(MedRent.inf)),color = NA) +
geom_sf(data = union_buffer, fill = NA, color = "red", linewidth = 1) +
scale_fill_manual(values = palette5, labels = qBr(allTracts.group,"MedRent.inf"), name = "Total Population \n (Quantile Breaks)") +
facet_wrap(~year) +
mapTheme()
allTracts.Summary <-
st_drop_geometry(allTracts.group) %>%
group_by(year, TOD) %>%
summarize(Rent = mean(MedRent, na.rm = T),
Population = mean(TotalPop, na.rm = T),
Percent_White = mean(pctWhite, na.rm = T),
Percent_Bach = mean(pctBachelors, na.rm = T),
Percent_Poverty = mean(pctPoverty, na.rm = T))
allTracts.Summary
kable(allTracts.Summary) %>%
kable_styling() %>%
footnote(general_title = "\n",
general = "Table 1.2")
# creating a table using the unite function to splice together year and TOD.
allTracts.Summary %>%
unite(year.TOD, year, TOD, sep = ": ", remove = T) %>%
gather(Variable, Value, -year.TOD) %>%
mutate(Value = round(Value, 2)) %>%
spread(year.TOD, Value) %>%
kable() %>%
kable_styling() %>%
footnote(general_title = "\n",
general = "Table 1.3")
View(allTracts)
allTracts.Summary %>%
gather(Variable, Value, -year, -TOD) %>%
ggplot(aes(year, Value, fill = TOD)) +
geom_bar(stat = "identity", position = "dodge") +
facet_wrap(~Variable, scales = "free", ncol=5) +
scale_fill_manual(values = c("#bae4bc", "#0868ac")) +
labs(title = "Indicator differences across time and space") +
plotTheme() + theme(legend.position="bottom")
centerCity <-
st_intersection(
st_buffer(filter(septaStops, Line == "El"), 2640) %>%
st_union(),
st_buffer(filter(septaStops, Line == "Broad_St"), 2640) %>%
st_union()) %>%
st_sf() %>%
mutate(Submarket = "Center City")
el <-
st_buffer(filter(septaStops, Line == "El"), 2640) %>% st_union() %>%
st_sf() %>%
st_difference(centerCity) %>%
mutate(Submarket = "El")
broad.st <-
st_buffer(filter(septaStops, Line == "Broad_St"), 2640) %>% st_union() %>%
st_sf() %>%
st_difference(centerCity) %>%
mutate(Submarket = "Broad Street")
threeMarkets <- rbind(el, broad.st, centerCity)
ggplot() +
geom_sf(data = st_union(tracts00) ) +
geom_sf(data = threeMarkets, aes(fill = Submarket)) +
mapTheme()
# Making data frames for the centroid intersections of the three buffers
selectSubmarkets <-
st_centroid(tracts00)[threeMarkets,] %>%
st_drop_geometry() %>%
left_join(dplyr::select(tracts00, GEOID)) %>%
st_sf()
ggplot() +
geom_sf(data = st_union(tracts00)) +
geom_sf(data =  ) +
mapTheme()
allTracts.rings <-
st_join(st_centroid(dplyr::select(allTracts, GEOID, year)),
multipleRingBuffer(st_union(septaStops), 47520, 2640)) %>%
st_drop_geometry() %>%
left_join(dplyr::select(allTracts, GEOID, MedRent, year),
by=c("GEOID"="GEOID", "year"="year")) %>%
st_sf() %>%
mutate(distance = distance / 5280) #convert to miles
ggplot() +
geom_sf(data = st_union(allTracts)) +
geom_sf(data = allTracts.rings) +
mapTheme()
ggplot() +
geom_sf(data = st_union(allTracts)) +
geom_sf(data = allTracts.rings, color = "red") +
mapTheme()
allTracts.rings <-
st_join(st_centroid(dplyr::select(allTracts, GEOID, year)),
multipleRingBuffer(st_union(septaStops), 47520, 2640)) %>%
st_drop_geometry() %>%
left_join(dplyr::select(allTracts, GEOID, MedRent, year),
by=c("GEOID"="GEOID", "year"="year")) %>%
st_sf() %>%
mutate(distance = distance / 5280) #convert to miles
ggplot() +
geom_sf(data = st_union(allTracts)) +
geom_sf(data = allTracts.rings, color = "red") +
mapTheme()
ggplot() +
geom_sf(data = st_union(allTracts)) +
geom_sf(data = allTracts.rings, aes(color = distance)) +
mapTheme()
View(allTracts.rings)
ggplot() +
geom_point(data = allTracts.rings, aes(x = distance, y = MedRent))
medRent_Distance <-  allTracts.rings %>%
group_by(distance) %>%
summarize(mean(mean_rent = mean(medRent, na.rm = TRUE)))
medRent_Distance <-  allTracts.rings %>%
group_by(distance) %>%
summarize(mean(mean_rent = mean(MedRent, na.rm = TRUE)))
medRent_Distance <-  allTracts.rings %>%
group_by(distance) %>%
summarize(mean=(mean_rent = mean(MedRent, na.rm = TRUE)))
ggplot() +
geom_line(data = allTracts.rings, aes(x = distance, y = mean_rent)) +
mapTheme()
ggplot() +
geom_line(data = medRent_Distance, aes(x = distance, y = mean_rent))
View(medRent_Distance)
medRent_Distance <-  allTracts.rings %>%
group_by(distance) %>%
summarize(mean_rent = mean(MedRent, na.rm = TRUE))
ggplot() +
geom_line(data = medRent_Distance, aes(x = distance, y = mean_rent))
allTracts.rings <-
st_join(st_centroid(dplyr::select(tracts19, GEOID, year)),
multipleRingBuffer(st_union(metra_stops), 47520, 2640)) %>%
st_drop_geometry() %>%
left_join(dplyr::select(allTracts, GEOID, MedRent, year),
by=c("GEOID"="GEOID", "year"="year")) %>%
st_sf() %>%
mutate(distance = distance / 5280) #convert to miles
